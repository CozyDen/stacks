name: servarr
services:

  sonarr:
    image: ghcr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=America/New_York
    labels:
    - traefik.enable=true
    - traefik.http.routers.sonarr.rule=Host(`sonarr.docker.den`)
    - traefik.http.routers.sonarr.entrypoints=web # Use the "web" entrypoint
    - traefik.http.services.sonarr.loadbalancer.server.port=8989 # Target the correct internal port
    volumes:
    - /opt/stacks/servarr/sonarr:/config
    - /mnt/jellyfin:/mnt/jellyfin
    expose:
    - 8989
    networks:
    - traefik

  radarr:
    image: ghcr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=America/New_York
    labels:
    - traefik.enable=true
    - traefik.http.routers.radarr.rule=Host(`radarr.docker.den`)
    - traefik.http.routers.radarr.entrypoints=web # Use the "web" entrypoint
    - traefik.http.services.radarr.loadbalancer.server.port=7878 # Target the correct internal port
    volumes:
    - /opt/stacks/servarr/radarr:/config
    - /mnt/jellyfin:/mnt/jellyfin
    expose:
    - 7878
    networks:
    - traefik

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: unless-stopped
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=America/New_York
    labels:
    - traefik.enable=true
    - traefik.http.routers.prowlarr.rule=Host(`prowlarr.docker.den`)
    - traefik.http.routers.prowlarr.entrypoints=web # Use the "web" entrypoint
    - traefik.http.services.prowlarr.loadbalancer.server.port=9696 # Target the correct internal port
    volumes:
    - /opt/stacks/servarr/prowlarr:/config
    expose:
    - 9696
    networks:
    - traefik

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=America/New_York
    labels:
    - traefik.enable=true
    - traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.docker.den`)
    - traefik.http.routers.jellyseerr.entrypoints=web # Use the "web" entrypoint
    - traefik.http.services.jellyseerr.loadbalancer.server.port=5055 # Target the correct internal port
    volumes:
    - /opt/stacks/servarr/jellyseerr:/config
    expose:
    - 5055
    networks:
    - traefik

  sabnzbd:
    image: ghcr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=America/New_York
    labels:
    - traefik.enable=true
    - traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.docker.den`)
    - traefik.http.routers.sabnzbd.entrypoints=web # Use the "web" entrypoint
    - traefik.http.services.sabnzbd.loadbalancer.server.port=8080 # Target the correct internal port
    volumes:
    - /opt/stacks/servarr/sabnzbd:/config
    - /mnt/jellyfin:/mnt/jellyfin
    expose:
    - 8080
    networks:
    - traefik

networks:
  traefik:
    external: true
